% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nnlearn.R
\name{nnlearn}
\alias{nnlearn}
\title{Neural Network Training}
\usage{
nnlearn(x, y, layers, hidden.units, w = unlist(initiate_theta(x, y,
  layers, hidden.units)), lambda = 0, ...)
}
\arguments{
\item{x}{Matrix containing feature data to be supplied to the neural network for training.}

\item{y}{Vector containing label data corresponding to the rows of \code{x}.}

\item{layers}{Number of hidden layers in the neural network.}

\item{hidden.units}{Number of hidden units/neurons in each hidden layer.}

\item{w}{Vector containing initial weights.}

\item{lambda}{The regularization parameter. Must be a real number.}

\item{...}{Further arguments passed to or from other methods.}
}
\value{
List containing the optimized weight matrices.
}
\description{
Function to train a neural network.
}
\details{
Optimizes the weights by calling the \code{optim} function and passes \code{forwardpass} and \code{costfunctiongrad} as the function and gradient respectively. 
\itemize{
 \item If \code{method} is not specified, \code{optim} uses the \code{CG} as the default method.
 \item If \code{lambda} is unspecified, it assumes the default value of \code{0} and \code{nnlearn} performs unregularized training.
 \item If \code{w} is unspecified, \code{nnlearn} calls \code{initiate_theta} and creates a vector of weights and uses that newly created vector.
}
}
\examples{
data <- data.matrix(iris)
x <- data[,1:4]
y <- data[,5]
v <- c(1:39)/100
t <- nnlearn(x,y,layers = 2,hidden.units = 3,lambda = 0.85,w = v)
}
